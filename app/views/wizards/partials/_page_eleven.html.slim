.wizard-page.hidden#page11 data-stage='11'
  = hidden_field_tag nil, t('wizards.index.page11.step_text'), class: 'status-text-val'
  .col.left-column
    .title
      =t('wizards.index.page11.title')
    .row
      .column.col-lg-12
        .form-field
          / TODO: Change to Rails helper!
          input#pac-input.controls[type="text" placeholder="Enter a location" value="#{@boat.location.short_name}"]
          = hidden_field_tag 'refine-search-text', t('wizards.index.page11.refine-search-text')
          = hidden_field_tag 'icon-marker', image_url('marker.png')
          = f.fields_for :location do |l|
            = l.hidden_field :name, id: 'adr-value', class: 'place-data'
            = l.hidden_field :short_name, id: 'short-adr-value', class: 'place-data'
            = l.hidden_field :lat, id: 'lat-value', class: 'place-data'
            = l.hidden_field :lng, id: 'lng-value', class: 'place-data'
    = render 'wizards/partials/buttons', current_stage: 11, commit: false, backurl: '#', nexturl: '#'
  .col.right-column.without-text
    #map-canvas.map

javascript:
  function initMap() {
    // Geocoding declarate
    function ourGeocoding() {
      google.maps.event.addListener(marker, 'dragend', function (evt) {
        $('#lat-value').val(evt.latLng.lat());
        $('#lng-value').val(evt.latLng.lng());
        $.ajax({
          type: "GET",
          url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + evt.latLng.lat() + ',' + evt.latLng.lng() + '&location_type=ROOFTOP&result_type=street_address&key=' + apiKey,
          cache: false,
          success: function(data){

            if(data.results.length != 0) {
              $('#pac-input').val(data.results[0].formatted_address);
              $('#adr-value').val(data.results[0].formatted_address);
              var _city,
                  _country,
                  _shortAddress = data.results[0].address_components;
              for (var i = _shortAddress.length - 1; i > 0; i--) {
                if (_shortAddress[i].types.indexOf("country") !== -1) {
                  _country = _shortAddress[i].long_name;
                  break;
                }
              };
              for (var i = _shortAddress.length - 1; i > 0; i--) {
                if (_shortAddress[i].types.indexOf("locality") !== -1) {
                  _city = _shortAddress[i].long_name;
                  break;
                }
              };
              if (_city && _country) {
                $('#short-adr-value').val(_city + ', ' + _country);
              } else if (_country) {
                $('#short-adr-value').val(_country);
              }
              $('#pac-input').siblings('.field-error').detach();
              $('#pac-input').removeClass('input-error');
            } else {
              $('#pac-input').val('');
              $('#adr-value').val('');
              $('#short-adr-value').val('');
              $('#lat-value').val('');
              $('#lng-value').val('');
              if ($('#pac-input').parent().find('.field-error').length == 0) {
                $('#pac-input').parent().append('<span class="field-error">' + refineSearchText + '</span>');
              }
              $('#pac-input').addClass('input-error');
            };

          },
          error: function (error) {
            console.log(error);
          }
        });
      });
    };

    // Configuration
    var refineSearchText = $('#refine-search-text').val(),
        input = document.getElementById('pac-input'),
        types = document.getElementById('type-selector'),
        image = $('#icon-marker').val(),
        apiKey = 'AIzaSyCK3l7AsKHTwtVByqkpAGCNOXzNv6nug2k', // Also update API Key at script (bottom page)
        startPos = {lat: 40, lng: -3},
        map,
        marker;

    // Init map
    map = new google.maps.Map(document.getElementById('map-canvas'), {
      center: startPos,
      zoom: 10
    });

    // Init marker
    marker = new google.maps.Marker({
      map: map,
      draggable: true,
      position: startPos,
      icon: image
    });

    // Init controls
    // map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

    // If geodata is empty try HTML5 Geolocation
    if($('#lat-value').val().length == 0 && $('#lng-value').val().length == 0) {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
          startPos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          map.setCenter(startPos);
          marker.setPosition(startPos);
          ourGeocoding();
          }, function() {
            map.setCenter(startPos);
            marker.setPosition(startPos);
            ourGeocoding();
          });
      } else {
        map.setCenter(startPos);
        marker.setPosition(startPos);
        ourGeocoding();
      };
    } else {
    // If geodata is NOT empty use values from geofields
      startPos = {
        lat: +$('#lat-value').val(),
        lng: +$('#lng-value').val()
      };
      map.setCenter(startPos);
      marker.setPosition(startPos);
      ourGeocoding();
    };

    // Autocomplete
    var autocomplete = new google.maps.places.Autocomplete(input);

    autocomplete.bindTo('bounds', map);
    var infowindow = new google.maps.InfoWindow();
    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);

      var place = autocomplete.getPlace();
      if (!place.geometry) {
        //window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);
      }

      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');

        var _city,
            _country,
            _shortAddress = place.address_components;

        for (var i = _shortAddress.length - 1; i >= 0; i--) {
          if (_shortAddress[i].types.indexOf("country") !== -1) {
            _country = _shortAddress[i].long_name;
            break;
          }
        };
        for (var i = _shortAddress.length - 1; i >= 0; i--) {
          if (_shortAddress[i].types.indexOf("locality") !== -1) {
            _city = _shortAddress[i].long_name;
            break;
          }
        };
        if (_city && _country) {
          $('#short-adr-value').val(_city + ', ' + _country);
        } else if (_country) {
          $('#short-adr-value').val(_country);
        } else {
          $('#short-adr-value').val('');
        }
      };

      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, marker);

      // Set data for server
      $('#adr-value').val(address);
      $('#lat-value').val(place.geometry.location.lat());
      $('#lng-value').val(place.geometry.location.lng());
    });

    // Clean data, if input is empty
    $('#pac-input').on('change', function(){
      if($(this).val() == '') {
        $('.place-data').val('');
      }
    });

    function moveMarker(placeName, latlng) {
      marker.setIcon(image);
      marker.setPosition(latlng);
      marker.setVisible(true);
      map.setCenter(latlng);
      infowindow.setContent(placeName);
      infowindow.open(map, marker);
    }

    // show first result of autocomplete on keypress
    $("#pac-input").focusin(function () {
      $(document).keypress(function (e) {
        if (e.which == 13) {
          var inputLocation = $('.form-field #pac-input');
          var firstResult = $(".pac-container .pac-item:first .pac-item-query").text();
          var geocoder = new google.maps.Geocoder();
          geocoder.geocode({"address": firstResult}, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
              var lat = results[0].geometry.location.lat(),
                lng = results[0].geometry.location.lng(),
                placeName = results[0].address_components[0].long_name,
                latlng = new google.maps.LatLng(lat, lng);


              inputLocation.val(firstResult);
              moveMarker(placeName, latlng);


                if (results[0].types[0] === "locality") {
                    var city = results[0].address_components[0].short_name;
                    //console.log(city)
                }
                if(results[0].types[0] === "country"){
                    var country = results[0].address_components[0].long_name;
                    console.log(country)
                }

              //console.log(results[0].types[0])
            }
          });
        } else {
          $(".pac-container").css("visibility", "visible");
        }
      });
    });

  }

script async="" defer="" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCK3l7AsKHTwtVByqkpAGCNOXzNv6nug2k&libraries=places&callback=initMap"
